{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonPositions = [['Cider', 'Seafood Casserole', 'Modern Art', 'Each Other'], ['New Nanny', 'Family Business', 'Anonymous Blogger', 'New Money'], ['Coat', 'Locket', 'Sweater', 'Book'], ['Selfie', 'Aerial Shot', 'Shrimp', 'Shadow']];\nconst buttonsByArray = [['Shadow', 'Selfie', 'Shrimp', 'Aerial Shot'], ['Modern Art', 'Seafood Casserole', 'Cider', 'Each Other'], ['Anonymous Blogger', 'New Nanny', 'Family Business', 'New Money'], ['Sweater', 'Book', 'Locket', 'Coat']];\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst arrayNames = ['Lock screens of each other', 'Things we enjoyed on dates', 'Synopsis of shows we watched', 'Gifts to each other'];\nconst shuffleArray = array => {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\nconst App = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [lastMatchedArray, setLastMatchedArray] = useState(null);\n  const [shuffledButtons, setShuffledButtons] = useState([]);\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n  useEffect(() => {\n    setShuffledButtons(shuffleArray(buttonsByArray.flat()));\n  }, [buttonsByArray]);\n  const handleButtonClick = item => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n  const isItemSelected = item => {\n    return selectedItems.has(item);\n  };\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set([...matchedArrays, matchedIndex]));\n      setLastMatchedArray(matchedIndex); // Store last matched array\n      setSelectedItems(new Set());\n      setShouldShake(false);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setShouldShake(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2665 Connections \\u2665\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), lastMatchedArray !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subheading\",\n      style: {\n        color: arrayColors[lastMatchedArray]\n      },\n      children: arrayNames[lastMatchedArray]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-container ${shouldShake ? 'shake-animation' : ''}`,\n      children: shuffledButtons.map((item, index) => {\n        const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n        const isMatched = matchedArrays.has(arrayIndex);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`,\n          style: {\n            backgroundColor: isMatched ? arrayColors[arrayIndex] : null\n          },\n          onClick: () => handleButtonClick(item),\n          disabled: isMatched,\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        disabled: !checkButtonEnabled,\n        onClick: handleCheckButtonClick,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Zw1E+dGj0mFOUQJlte1Rqlnf0pM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","buttonPositions","buttonsByArray","arrayColors","arrayNames","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","App","_s","selectedItems","setSelectedItems","Set","checkButtonEnabled","setCheckButtonEnabled","matchedArrays","setMatchedArrays","shouldShake","setShouldShake","lastMatchedArray","setLastMatchedArray","shuffledButtons","setShuffledButtons","size","timer","setTimeout","clearTimeout","flat","handleButtonClick","item","has","updatedSelectedItems","delete","add","isItemSelected","handleCheckButtonClick","selectedArray","find","every","includes","console","log","matchedIndex","findIndex","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","index","arrayIndex","isMatched","backgroundColor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst buttonPositions = [\n  ['Cider', 'Seafood Casserole', 'Modern Art', 'Each Other'],\n  ['New Nanny', 'Family Business', 'Anonymous Blogger', 'New Money'],\n  ['Coat', 'Locket', 'Sweater', 'Book'],\n  ['Selfie', 'Aerial Shot', 'Shrimp', 'Shadow']\n];\n\nconst buttonsByArray = [\n  ['Shadow', 'Selfie', 'Shrimp', 'Aerial Shot'],\n  ['Modern Art', 'Seafood Casserole', 'Cider', 'Each Other'],\n  ['Anonymous Blogger', 'New Nanny', 'Family Business', 'New Money'],\n  ['Sweater', 'Book', 'Locket', 'Coat'],\n];\n\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst arrayNames = ['Lock screens of each other', 'Things we enjoyed on dates', 'Synopsis of shows we watched', 'Gifts to each other'];\n\nconst shuffleArray = (array) => {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [lastMatchedArray, setLastMatchedArray] = useState(null);\n  const [shuffledButtons, setShuffledButtons] = useState([]);\n\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n\n  useEffect(() => {\n    setShuffledButtons(shuffleArray(buttonsByArray.flat()));\n  }, [buttonsByArray]);\n\n  const handleButtonClick = (item) => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set([...matchedArrays, matchedIndex]));\n      setLastMatchedArray(matchedIndex); // Store last matched array\n      setSelectedItems(new Set());\n      setShouldShake(false);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setShouldShake(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"heading-wrapper\"><h1>♥ Connections ♥</h1></div>\n      {lastMatchedArray !== null && (\n        <div className=\"subheading\" style={{ color: arrayColors[lastMatchedArray] }}>\n          {arrayNames[lastMatchedArray]}\n        </div>\n      )}\n      <div className={`grid-container ${shouldShake ? 'shake-animation' : ''}`}>\n        {shuffledButtons.map((item, index) => {\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          const isMatched = matchedArrays.has(arrayIndex);\n          return (\n            <button\n              key={index}\n              className={`${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`}\n              style={{\n                backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n              }}\n              onClick={() => handleButtonClick(item)}\n              disabled={isMatched}\n            >\n              {item}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"check-button-container\">\n        <button\n          className=\"check-button\"\n          disabled={!checkButtonEnabled}\n          onClick={handleCheckButtonClick}\n        >\n          Check\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}