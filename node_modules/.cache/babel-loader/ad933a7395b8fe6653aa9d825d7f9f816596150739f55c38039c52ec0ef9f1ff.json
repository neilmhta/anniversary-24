{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonPositions = [['array1string1', 'array1string2', 'array1string3', 'array1string4'], ['array2string1', 'array2string2', 'array2string3', 'array2string4'], ['array3string1', 'array3string2', 'array3string3', 'array3string4'], ['array4string1', 'array4string2', 'array4string3', 'array4string4']];\nconst buttonsByArray = [['array1string1', 'array1string2', 'array1string3', 'array1string4'], ['array2string1', 'array2string2', 'array2string3', 'array2string4'], ['array3string1', 'array3string2', 'array3string3', 'array3string4'], ['array4string1', 'array4string2', 'array4string3', 'array4string4']];\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst App = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n  const handleButtonClick = item => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n  const isItemSelected = item => {\n    return selectedItems.has(item);\n  };\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      // Keep track of previously matched arrays to clear their status\n      const previouslyMatchedArrays = buttonsByArray.filter((_, index) => matchedArrays.has(index));\n      setMatchedArrays(new Set());\n      setShouldShake(true);\n\n      // Clear matched status from previously matched arrays\n      previouslyMatchedArrays.forEach((_, index) => {\n        setTimeout(() => {\n          setMatchedArrays(prevMatchedArrays => {\n            const updatedMatchedArrays = new Set(prevMatchedArrays);\n            updatedMatchedArrays.delete(index);\n            return updatedMatchedArrays;\n          });\n        }, 500);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2665 Connections \\u2665\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-container ${shouldShake ? 'shake-animation' : ''}`,\n      children: buttonPositions.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((item, columnIndex) => {\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          const isMatched = matchedArrays.has(arrayIndex);\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`,\n            style: {\n              backgroundColor: isMatched ? arrayColors[arrayIndex] : null\n            },\n            onClick: () => handleButtonClick(item),\n            disabled: isMatched,\n            children: item\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this);\n        })\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        disabled: !checkButtonEnabled,\n        onClick: handleCheckButtonClick,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [...selectedItems].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CpcoUeIKAbJWY85BLZ1rZ8boOyE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","buttonPositions","buttonsByArray","arrayColors","App","_s","selectedItems","setSelectedItems","Set","checkButtonEnabled","setCheckButtonEnabled","matchedArrays","setMatchedArrays","shouldShake","setShouldShake","size","timer","setTimeout","clearTimeout","handleButtonClick","item","has","updatedSelectedItems","delete","add","isItemSelected","handleCheckButtonClick","selectedArray","find","array","every","includes","console","log","matchedIndex","findIndex","previouslyMatchedArrays","filter","_","index","forEach","prevMatchedArrays","updatedMatchedArrays","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","rowIndex","columnIndex","arrayIndex","isMatched","style","backgroundColor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst buttonPositions = [\n  ['array1string1', 'array1string2', 'array1string3', 'array1string4'],\n  ['array2string1', 'array2string2', 'array2string3', 'array2string4'],\n  ['array3string1', 'array3string2', 'array3string3', 'array3string4'],\n  ['array4string1', 'array4string2', 'array4string3', 'array4string4'],\n];\n\nconst buttonsByArray = [\n  ['array1string1', 'array1string2', 'array1string3', 'array1string4'],\n  ['array2string1', 'array2string2', 'array2string3', 'array2string4'],\n  ['array3string1', 'array3string2', 'array3string3', 'array3string4'],\n  ['array4string1', 'array4string2', 'array4string3', 'array4string4'],\n];\n\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n\n  const handleButtonClick = (item) => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n  \n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      // Keep track of previously matched arrays to clear their status\n      const previouslyMatchedArrays = buttonsByArray.filter((_, index) => matchedArrays.has(index));\n      setMatchedArrays(new Set());\n      setShouldShake(true);\n  \n      // Clear matched status from previously matched arrays\n      previouslyMatchedArrays.forEach((_, index) => {\n        setTimeout(() => {\n          setMatchedArrays(prevMatchedArrays => {\n            const updatedMatchedArrays = new Set(prevMatchedArrays);\n            updatedMatchedArrays.delete(index);\n            return updatedMatchedArrays;\n          });\n        }, 500);\n      });\n    }\n  };\n  \n  return (\n    <div>\n      <div className=\"heading-wrapper\"><h1>♥ Connections ♥</h1></div>\n      <div className={`grid-container ${shouldShake ? 'shake-animation' : ''}`}>\n        {buttonPositions.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"grid-row\">\n            {row.map((item, columnIndex) => {\n              const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n              const isMatched = matchedArrays.has(arrayIndex);\n              return (\n                <button\n                  key={columnIndex}\n                  className={`${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`}\n                  style={{\n                    backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n                  }}\n                  onClick={() => handleButtonClick(item)}\n                  disabled={isMatched}\n                >\n                  {item}\n                </button>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"check-button-container\">\n        <button\n          className=\"check-button\"\n          disabled={!checkButtonEnabled}\n          onClick={handleCheckButtonClick}\n        >\n          Check\n        </button>\n      </div>\n      <h2>Selected Items</h2>\n      <ul>\n        {[...selectedItems].map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}