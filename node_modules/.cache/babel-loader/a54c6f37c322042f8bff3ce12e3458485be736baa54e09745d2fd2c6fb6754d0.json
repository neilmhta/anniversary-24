{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonPositions = [['array1string1', 'array2string2', 'array1string3', 'array3string4'], ['array3string1', 'array3string2', 'array2string3', 'array2string4'], ['array4string1', 'array1string2', 'array3string3', 'array4string4'], ['array2string1', 'array4string2', 'array4string3', 'array1string4']];\nconst buttonsByArray = [['array1string1', 'array1string2', 'array1string3', 'array1string4'], ['array2string1', 'array2string2', 'array2string3', 'array2string4'], ['array3string1', 'array3string2', 'array3string3', 'array3string4'], ['array4string1', 'array4string2', 'array4string3', 'array4string4']];\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst App = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [gridLayout, setGridLayout] = useState(buttonPositions);\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n  const handleButtonClick = item => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n  const isItemSelected = item => {\n    return selectedItems.has(item);\n  };\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n\n      // Change the color of buttons in the matched array\n      const updatedLayout = gridLayout.map((row, rowIndex) => {\n        return row.map((item, columnIndex) => {\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          if (arrayIndex === matchedIndex) {\n            return {\n              ...item,\n              matched: true\n            };\n          }\n          return item;\n        });\n      });\n      setGridLayout(updatedLayout);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setMatchedArrays(new Set());\n      setShouldShake(true); // Ensure shouldShake is set to true for incorrect arrays\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2665 Connections \\u2665\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-container ${shouldShake ? 'shake-animation' : ''}`,\n      children: gridLayout[0].map((_, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-column\",\n        children: gridLayout.map((row, rowIndex) => {\n          const item = row[columnIndex];\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          const isMatched = matchedArrays.has(arrayIndex);\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`,\n            style: {\n              backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n              visibility: isMatched ? 'hidden' : 'visible' // Hide matched buttons\n            },\n            onClick: () => handleButtonClick(item),\n            disabled: isMatched,\n            children: item\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        disabled: !checkButtonEnabled,\n        onClick: handleCheckButtonClick,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [...selectedItems].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8Bd1H0tQM5gp4DzgqzlZkIinsC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","buttonPositions","buttonsByArray","arrayColors","App","_s","selectedItems","setSelectedItems","Set","checkButtonEnabled","setCheckButtonEnabled","matchedArrays","setMatchedArrays","shouldShake","setShouldShake","gridLayout","setGridLayout","size","timer","setTimeout","clearTimeout","handleButtonClick","item","has","updatedSelectedItems","delete","add","isItemSelected","handleCheckButtonClick","selectedArray","find","array","every","includes","console","log","matchedIndex","findIndex","updatedLayout","map","row","rowIndex","columnIndex","arrayIndex","matched","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_","isMatched","style","backgroundColor","visibility","onClick","disabled","index","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst buttonPositions = [\n  ['array1string1', 'array2string2', 'array1string3', 'array3string4'],\n  ['array3string1', 'array3string2', 'array2string3', 'array2string4'],\n  ['array4string1', 'array1string2', 'array3string3', 'array4string4'],\n  ['array2string1', 'array4string2', 'array4string3', 'array1string4'],\n];\n\nconst buttonsByArray = [\n  ['array1string1', 'array1string2', 'array1string3', 'array1string4'],\n  ['array2string1', 'array2string2', 'array2string3', 'array2string4'],\n  ['array3string1', 'array3string2', 'array3string3', 'array3string4'],\n  ['array4string1', 'array4string2', 'array4string3', 'array4string4'],\n];\n\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [gridLayout, setGridLayout] = useState(buttonPositions);\n\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n\n  const handleButtonClick = (item) => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n  \n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n  \n      // Change the color of buttons in the matched array\n      const updatedLayout = gridLayout.map((row, rowIndex) => {\n        return row.map((item, columnIndex) => {\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          if (arrayIndex === matchedIndex) {\n            return { ...item, matched: true };\n          }\n          return item;\n        });\n      });\n  \n      setGridLayout(updatedLayout);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setMatchedArrays(new Set());\n      setShouldShake(true); // Ensure shouldShake is set to true for incorrect arrays\n    }\n  };\n    \n  return (\n    <div>\n      <div className=\"heading-wrapper\"><h1>♥ Connections ♥</h1></div>\n      <div className={`grid-container ${shouldShake ? 'shake-animation' : ''}`}>\n  {/* Transposing the grid */}\n  {gridLayout[0].map((_, columnIndex) => (\n    <div key={columnIndex} className=\"grid-column\">\n      {gridLayout.map((row, rowIndex) => {\n        const item = row[columnIndex];\n        const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n        const isMatched = matchedArrays.has(arrayIndex);\n        return (\n          <button\n            key={rowIndex}\n            className={`${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`}\n            style={{\n              backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n              visibility: isMatched ? 'hidden' : 'visible', // Hide matched buttons\n            }}\n            onClick={() => handleButtonClick(item)}\n            disabled={isMatched}\n          >\n            {item}\n          </button>\n        );\n      })}\n    </div>\n  ))}\n</div>\n\n      <div className=\"check-button-container\">\n        <button\n          className=\"check-button\"\n          disabled={!checkButtonEnabled}\n          onClick={handleCheckButtonClick}\n        >\n          Check\n        </button>\n      </div>\n      <h2>Selected Items</h2>\n      <ul>\n        {[...selectedItems].map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,eAAe,GAAG,CACtB,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,CACrE;AAED,MAAMC,cAAc,GAAG,CACrB,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,EACpE,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,CACrE;AAED,MAAMC,WAAW,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAIW,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAIW,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAACI,eAAe,CAAC;EAE7DH,SAAS,CAAC,MAAM;IACdY,qBAAqB,CAACJ,aAAa,CAACW,IAAI,KAAK,CAAC,CAAC;EACjD,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnBR,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,EAAE;MACf,MAAMK,KAAK,GAAGC,UAAU,CAAC,MAAML,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;MAC1D,OAAO,MAAMM,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,MAAMQ,iBAAiB,GAAIC,IAAI,IAAK;IAClC,IAAIhB,aAAa,CAACiB,GAAG,CAACD,IAAI,CAAC,EAAE;MAC3B,MAAME,oBAAoB,GAAG,IAAIhB,GAAG,CAACF,aAAa,CAAC;MACnDkB,oBAAoB,CAACC,MAAM,CAACH,IAAI,CAAC;MACjCf,gBAAgB,CAACiB,oBAAoB,CAAC;IACxC,CAAC,MAAM,IAAIlB,aAAa,CAACW,IAAI,GAAG,CAAC,EAAE;MACjCV,gBAAgB,CAAC,IAAIC,GAAG,CAACF,aAAa,CAAC,CAACoB,GAAG,CAACJ,IAAI,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMK,cAAc,GAAIL,IAAI,IAAK;IAC/B,OAAOhB,aAAa,CAACiB,GAAG,CAACD,IAAI,CAAC;EAChC,CAAC;EAED,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,aAAa,GAAG3B,cAAc,CAAC4B,IAAI,CAACC,KAAK,IAAI;MACjD,OAAO,CAAC,GAAGzB,aAAa,CAAC,CAAC0B,KAAK,CAACV,IAAI,IAAIS,KAAK,CAACE,QAAQ,CAACX,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAIO,aAAa,EAAE;MACjBK,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEN,aAAa,CAAC;MAC1E,MAAMO,YAAY,GAAGlC,cAAc,CAACmC,SAAS,CAACN,KAAK,IAAIA,KAAK,KAAKF,aAAa,CAAC;MAC/EjB,gBAAgB,CAAC,IAAIJ,GAAG,CAACG,aAAa,CAAC,CAACe,GAAG,CAACU,YAAY,CAAC,CAAC;MAC1D7B,gBAAgB,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;MAC3BM,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA,MAAMwB,aAAa,GAAGvB,UAAU,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;QACtD,OAAOD,GAAG,CAACD,GAAG,CAAC,CAACjB,IAAI,EAAEoB,WAAW,KAAK;UACpC,MAAMC,UAAU,GAAGzC,cAAc,CAACmC,SAAS,CAACN,KAAK,IAAIA,KAAK,CAACE,QAAQ,CAACX,IAAI,CAAC,CAAC;UAC1E,IAAIqB,UAAU,KAAKP,YAAY,EAAE;YAC/B,OAAO;cAAE,GAAGd,IAAI;cAAEsB,OAAO,EAAE;YAAK,CAAC;UACnC;UACA,OAAOtB,IAAI;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFN,aAAa,CAACsB,aAAa,CAAC;IAC9B,CAAC,MAAM;MACLJ,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DvB,gBAAgB,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAAC;MAC3BM,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAED,oBACEd,OAAA;IAAA6C,QAAA,gBACE7C,OAAA;MAAK8C,SAAS,EAAC,iBAAiB;MAAAD,QAAA,eAAC7C,OAAA;QAAA6C,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/DlD,OAAA;MAAK8C,SAAS,EAAG,kBAAiBjC,WAAW,GAAG,iBAAiB,GAAG,EAAG,EAAE;MAAAgC,QAAA,EAE5E9B,UAAU,CAAC,CAAC,CAAC,CAACwB,GAAG,CAAC,CAACY,CAAC,EAAET,WAAW,kBAChC1C,OAAA;QAAuB8C,SAAS,EAAC,aAAa;QAAAD,QAAA,EAC3C9B,UAAU,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;UACjC,MAAMnB,IAAI,GAAGkB,GAAG,CAACE,WAAW,CAAC;UAC7B,MAAMC,UAAU,GAAGzC,cAAc,CAACmC,SAAS,CAACN,KAAK,IAAIA,KAAK,CAACE,QAAQ,CAACX,IAAI,CAAC,CAAC;UAC1E,MAAM8B,SAAS,GAAGzC,aAAa,CAACY,GAAG,CAACoB,UAAU,CAAC;UAC/C,oBACE3C,OAAA;YAEE8C,SAAS,EAAG,GAAEnB,cAAc,CAACL,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG,IAAG8B,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;YACrFC,KAAK,EAAE;cACLC,eAAe,EAAEF,SAAS,GAAGjD,WAAW,CAACwC,UAAU,CAAC,GAAG,IAAI;cAC3DY,UAAU,EAAEH,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAE;YAChD,CAAE;YACFI,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAACC,IAAI,CAAE;YACvCmC,QAAQ,EAAEL,SAAU;YAAAP,QAAA,EAEnBvB;UAAI,GATAmB,QAAQ;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUP,CAAC;QAEb,CAAC;MAAC,GAnBMR,WAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBhB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEAlD,OAAA;MAAK8C,SAAS,EAAC,wBAAwB;MAAAD,QAAA,eACrC7C,OAAA;QACE8C,SAAS,EAAC,cAAc;QACxBW,QAAQ,EAAE,CAAChD,kBAAmB;QAC9B+C,OAAO,EAAE5B,sBAAuB;QAAAiB,QAAA,EACjC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlD,OAAA;MAAA6C,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlD,OAAA;MAAA6C,QAAA,EACG,CAAC,GAAGvC,aAAa,CAAC,CAACiC,GAAG,CAAC,CAACjB,IAAI,EAAEoC,KAAK,kBAClC1D,OAAA;QAAA6C,QAAA,EAAiBvB;MAAI,GAAZoC,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA9GID,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AAgHT,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}