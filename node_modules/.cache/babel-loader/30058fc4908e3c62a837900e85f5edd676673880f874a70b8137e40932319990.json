{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonPositions = [['array1string1', 'array2string2', 'array1string3', 'array3string4'], ['array3string1', 'array3string2', 'array2string3', 'array2string4'], ['array4string1', 'array1string2', 'array3string3', 'array4string4'], ['array2string1', 'array4string2', 'array4string3', 'array1string4']];\nconst buttonsByArray = [['array1string1', 'array1string2', 'array1string3', 'array1string4'], ['array2string1', 'array2string2', 'array2string3', 'array2string4'], ['array3string1', 'array3string2', 'array3string3', 'array3string4'], ['array4string1', 'array4string2', 'array4string3', 'array4string4']];\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst App = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [gridLayout, setGridLayout] = useState(buttonPositions);\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n  const handleButtonClick = item => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n  const isItemSelected = item => {\n    return selectedItems.has(item);\n  };\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n\n      // Remove the matched array from the grid layout\n      const remainingArrays = gridLayout.filter((_, index) => index !== matchedIndex);\n      setGridLayout(remainingArrays);\n\n      // Update the display with matched array name and strings\n      const arrayName = `Array ${matchedIndex + 1}`;\n      const arrayStrings = selectedArray.map((str, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: str\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this));\n      setMatchedArray({\n        name: arrayName,\n        strings: arrayStrings\n      });\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setMatchedArrays(new Set());\n      setShouldShake(true); // Ensure shouldShake is set to true for incorrect arrays\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2665 Connections \\u2665\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `grid-container ${shouldShake ? 'shake-animation' : ''}`,\n      children: gridLayout[0].map((_, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-column\",\n        children: gridLayout.map((row, rowIndex) => {\n          const item = row[columnIndex];\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          const isMatched = matchedArrays.has(arrayIndex);\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`,\n            style: {\n              backgroundColor: isMatched ? arrayColors[arrayIndex] : null\n            },\n            onClick: () => handleButtonClick(item),\n            disabled: isMatched,\n            children: item\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"check-button\",\n        disabled: !checkButtonEnabled,\n        onClick: handleCheckButtonClick,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [...selectedItems].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8Bd1H0tQM5gp4DzgqzlZkIinsC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","buttonPositions","buttonsByArray","arrayColors","App","_s","selectedItems","setSelectedItems","Set","checkButtonEnabled","setCheckButtonEnabled","matchedArrays","setMatchedArrays","shouldShake","setShouldShake","gridLayout","setGridLayout","size","timer","setTimeout","clearTimeout","handleButtonClick","item","has","updatedSelectedItems","delete","add","isItemSelected","handleCheckButtonClick","selectedArray","find","array","every","includes","console","log","matchedIndex","findIndex","remainingArrays","filter","_","index","arrayName","arrayStrings","map","str","children","fileName","_jsxFileName","lineNumber","columnNumber","setMatchedArray","name","strings","className","columnIndex","row","rowIndex","arrayIndex","isMatched","style","backgroundColor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst buttonPositions = [\n  ['array1string1', 'array2string2', 'array1string3', 'array3string4'],\n  ['array3string1', 'array3string2', 'array2string3', 'array2string4'],\n  ['array4string1', 'array1string2', 'array3string3', 'array4string4'],\n  ['array2string1', 'array4string2', 'array4string3', 'array1string4'],\n];\n\nconst buttonsByArray = [\n  ['array1string1', 'array1string2', 'array1string3', 'array1string4'],\n  ['array2string1', 'array2string2', 'array2string3', 'array2string4'],\n  ['array3string1', 'array3string2', 'array3string3', 'array3string4'],\n  ['array4string1', 'array4string2', 'array4string3', 'array4string4'],\n];\n\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [gridLayout, setGridLayout] = useState(buttonPositions);\n\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n\n  const handleButtonClick = (item) => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n  \n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set(matchedArrays).add(matchedIndex));\n      setSelectedItems(new Set());\n      setShouldShake(false);\n  \n      // Remove the matched array from the grid layout\n      const remainingArrays = gridLayout.filter((_, index) => index !== matchedIndex);\n      setGridLayout(remainingArrays);\n  \n      // Update the display with matched array name and strings\n      const arrayName = `Array ${matchedIndex + 1}`;\n      const arrayStrings = selectedArray.map((str, index) => (\n        <li key={index}>{str}</li>\n      ));\n      setMatchedArray({ name: arrayName, strings: arrayStrings });\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setMatchedArrays(new Set());\n      setShouldShake(true); // Ensure shouldShake is set to true for incorrect arrays\n    }\n  };\n            \n  return (\n    <div>\n      <div className=\"heading-wrapper\"><h1>♥ Connections ♥</h1></div>\n      <div className={`grid-container ${shouldShake ? 'shake-animation' : ''}`}>\n        {/* Transposing the grid */}\n        {gridLayout[0].map((_, columnIndex) => (\n          <div key={columnIndex} className=\"grid-column\">\n            {gridLayout.map((row, rowIndex) => {\n              const item = row[columnIndex];\n              const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n              const isMatched = matchedArrays.has(arrayIndex);\n              return (\n                <button\n                  key={rowIndex}\n                  className={`${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`}\n                  style={{\n                    backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n                  }}\n                  onClick={() => handleButtonClick(item)}\n                  disabled={isMatched}\n                >\n                  {item}\n                </button>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"check-button-container\">\n        <button\n          className=\"check-button\"\n          disabled={!checkButtonEnabled}\n          onClick={handleCheckButtonClick}\n        >\n          Check\n        </button>\n      </div>\n      <h2>Selected Items</h2>\n      <ul>\n        {[...selectedItems].map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}