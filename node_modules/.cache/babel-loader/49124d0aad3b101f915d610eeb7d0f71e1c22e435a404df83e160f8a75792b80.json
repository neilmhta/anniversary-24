{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst items = [{\n  name: \"Dog\",\n  connections: [\"Barks\", \"Fetches\", \"Bone\", \"Leash\"]\n}, {\n  name: \"Pizza\",\n  connections: [\"Cheese\", \"Pepperoni\", \"Slice\", \"Delivery\"]\n}, {\n  name: \"Soccer\",\n  connections: [\"Goal\", \"Ball\", \"Kick\", \"Team\"]\n}, {\n  name: \"Moon\",\n  connections: [\"Space\", \"Astronauts\", \"Craters\", \"Orbit\"]\n}, {\n  name: \"Keyboard\",\n  connections: [\"Typing\", \"Keys\", \"Computer\", \"Letters\"]\n}, {\n  name: \"Guitar\",\n  connections: [\"Strings\", \"Music\", \"Strum\", \"Acoustic\"]\n}\n// Add more items as needed\n];\nfunction NYTConnectionsGame() {\n  _s();\n  const [round, setRound] = useState(1);\n  const [item1, setItem1] = useState({});\n  const [item2, setItem2] = useState({});\n\n  // Function to generate random items and set them in state\n  const generateItems = () => {\n    const randomItem1 = items[Math.floor(Math.random() * items.length)];\n    let randomItem2 = items[Math.floor(Math.random() * items.length)];\n\n    // Make sure the second item is different from the first\n    while (randomItem2.name === randomItem1.name) {\n      randomItem2 = items[Math.floor(Math.random() * items.length)];\n    }\n    setItem1(randomItem1);\n    setItem2(randomItem2);\n  };\n\n  // Function to check if the guess is correct\n  const checkGuess = guess => {\n    const correct = guess === item1.name || guess === item2.name;\n    if (correct) {\n      alert(\"Correct! You guessed one of the items.\");\n    } else {\n      alert(\"Incorrect! Try again.\");\n    }\n    generateItems();\n    setRound(round + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the NYT Connections-style game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Round: \", round]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Try to guess the connection between the two items based on the clue.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clue 1: \", item1.connections && item1.connections[Math.floor(Math.random() * item1.connections.length)]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clue 2: \", item2.connections && item2.connections[Math.floor(Math.random() * item2.connections.length)]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Your guess\",\n      onChange: e => checkGuess(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(NYTConnectionsGame, \"B4cmqmTLI4fMaMmrzmCfCQnUNtA=\");\n_c = NYTConnectionsGame;\nexport default NYTConnectionsGame;\nvar _c;\n$RefreshReg$(_c, \"NYTConnectionsGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","items","name","connections","NYTConnectionsGame","_s","round","setRound","item1","setItem1","item2","setItem2","generateItems","randomItem1","Math","floor","random","length","randomItem2","checkGuess","guess","correct","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst items = [\n  { name: \"Dog\", connections: [\"Barks\", \"Fetches\", \"Bone\", \"Leash\"] },\n  { name: \"Pizza\", connections: [\"Cheese\", \"Pepperoni\", \"Slice\", \"Delivery\"] },\n  { name: \"Soccer\", connections: [\"Goal\", \"Ball\", \"Kick\", \"Team\"] },\n  { name: \"Moon\", connections: [\"Space\", \"Astronauts\", \"Craters\", \"Orbit\"] },\n  { name: \"Keyboard\", connections: [\"Typing\", \"Keys\", \"Computer\", \"Letters\"] },\n  { name: \"Guitar\", connections: [\"Strings\", \"Music\", \"Strum\", \"Acoustic\"] }\n  // Add more items as needed\n];\n\nfunction NYTConnectionsGame() {\n  const [round, setRound] = useState(1);\n  const [item1, setItem1] = useState({});\n  const [item2, setItem2] = useState({});\n\n  // Function to generate random items and set them in state\n  const generateItems = () => {\n    const randomItem1 = items[Math.floor(Math.random() * items.length)];\n    let randomItem2 = items[Math.floor(Math.random() * items.length)];\n\n    // Make sure the second item is different from the first\n    while (randomItem2.name === randomItem1.name) {\n      randomItem2 = items[Math.floor(Math.random() * items.length)];\n    }\n\n    setItem1(randomItem1);\n    setItem2(randomItem2);\n  };\n\n  // Function to check if the guess is correct\n  const checkGuess = (guess) => {\n    const correct = guess === item1.name || guess === item2.name;\n    if (correct) {\n      alert(\"Correct! You guessed one of the items.\");\n    } else {\n      alert(\"Incorrect! Try again.\");\n    }\n    generateItems();\n    setRound(round + 1);\n  };\n\n  return (\n    <div>\n      <h1>Welcome to the NYT Connections-style game!</h1>\n      <p>Round: {round}</p>\n      <p>Try to guess the connection between the two items based on the clue.</p>\n      <div>\n        <p>Clue 1: {item1.connections && item1.connections[Math.floor(Math.random() * item1.connections.length)]}</p>\n        <p>Clue 2: {item2.connections && item2.connections[Math.floor(Math.random() * item2.connections.length)]}</p>\n      </div>\n      <input type=\"text\" placeholder=\"Your guess\" onChange={(e) => checkGuess(e.target.value)} />\n    </div>\n  );\n}\n\nexport default NYTConnectionsGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}