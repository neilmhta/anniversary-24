{"ast":null,"code":"var _jsxFileName = \"/Users/neilmehta/Documents/vday-2024/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = ['array1string1', 'array1string2', 'array1string3', 'array1string4', 'array2string1', 'array2string2', 'array2string3', 'array2string4', 'array3string1', 'array3string2', 'array3string3', 'array3string4', 'array4string1', 'array4string2', 'array4string3', 'array4string4'];\nconst shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\nconst App = () => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [shuffledData, setShuffledData] = useState([]);\n  useEffect(() => {\n    setShuffledData(shuffleArray([...initialData]));\n  }, []);\n  const handleButtonClick = item => {\n    const updatedSelectedItems = new Set(selectedItems);\n    if (updatedSelectedItems.has(item)) {\n      updatedSelectedItems.delete(item);\n    } else {\n      updatedSelectedItems.add(item);\n    }\n    setSelectedItems(updatedSelectedItems);\n  };\n  const isItemSelected = item => {\n    return selectedItems.has(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"String Arrays Button Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: shuffledData.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: isItemSelected(item) ? 'selected' : '',\n        onClick: () => handleButtonClick(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Selected Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [...selectedItems].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RnH7gT6zFNQqYAAmZ4/yfxqzFzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialData","shuffleArray","array","i","length","j","Math","floor","random","App","_s","selectedItems","setSelectedItems","Set","shuffledData","setShuffledData","handleButtonClick","item","updatedSelectedItems","has","delete","add","isItemSelected","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/neilmehta/Documents/vday-2024/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst initialData = [\n  'array1string1',\n  'array1string2',\n  'array1string3',\n  'array1string4',\n  'array2string1',\n  'array2string2',\n  'array2string3',\n  'array2string4',\n  'array3string1',\n  'array3string2',\n  'array3string3',\n  'array3string4',\n  'array4string1',\n  'array4string2',\n  'array4string3',\n  'array4string4',\n];\n\nconst shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [shuffledData, setShuffledData] = useState([]);\n\n  useEffect(() => {\n    setShuffledData(shuffleArray([...initialData]));\n  }, []);\n\n  const handleButtonClick = (item) => {\n    const updatedSelectedItems = new Set(selectedItems);\n    if (updatedSelectedItems.has(item)) {\n      updatedSelectedItems.delete(item);\n    } else {\n      updatedSelectedItems.add(item);\n    }\n    setSelectedItems(updatedSelectedItems);\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  return (\n    <div>\n      <h1>String Arrays Button Grid</h1>\n      <div className=\"grid-container\">\n        {shuffledData.map((item, index) => (\n          <button\n            key={index}\n            className={isItemSelected(item) ? 'selected' : ''}\n            onClick={() => handleButtonClick(item)}\n          >\n            {item}\n          </button>\n        ))}\n      </div>\n      <h2>Selected Items</h2>\n      <ul>\n        {[...selectedItems].map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}