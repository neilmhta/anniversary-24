{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles.css';// Import the CSS file\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const buttonPositions=[['Cider','Seafood Casserole','Modern Art','Each Other'],['New Nanny','Family Business','Anonymous Blogger','New Money'],['Coat','Locket','Sweater','Book'],['Selfie','Aerial Shot','Shrimp','Shadow']];const buttonsByArray=[['Shadow','Selfie','Shrimp','Aerial Shot'],['Modern Art','Seafood Casserole','Cider','Each Other'],['Anonymous Blogger','New Nanny','Family Business','New Money'],['Sweater','Book','Locket','Coat']];const arrayColors=['maroon','green','navy','purple'];const arrayNames=['Lock screens of each other','Things we enjoyed on dates','Synopsis of shows we watched','Gifts to each other'];const shuffleArray=array=>{const shuffledArray=[...array];for(let i=shuffledArray.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[shuffledArray[i],shuffledArray[j]]=[shuffledArray[j],shuffledArray[i]];}return shuffledArray;};const App=()=>{const[selectedItems,setSelectedItems]=useState(new Set());const[checkButtonEnabled,setCheckButtonEnabled]=useState(false);const[matchedArrays,setMatchedArrays]=useState(new Set());const[shouldShake,setShouldShake]=useState(false);const[lastMatchedArray,setLastMatchedArray]=useState(null);const[shuffledButtons,setShuffledButtons]=useState([]);useEffect(()=>{setCheckButtonEnabled(selectedItems.size===4);},[selectedItems]);useEffect(()=>{if(shouldShake){const timer=setTimeout(()=>setShouldShake(false),500);return()=>clearTimeout(timer);}},[shouldShake]);useEffect(()=>{setShuffledButtons(shuffleArray(buttonsByArray.flat()));},[buttonsByArray]);const handleButtonClick=item=>{if(selectedItems.has(item)){const updatedSelectedItems=new Set(selectedItems);updatedSelectedItems.delete(item);setSelectedItems(updatedSelectedItems);}else if(selectedItems.size<4){setSelectedItems(new Set(selectedItems).add(item));}};const isItemSelected=item=>{return selectedItems.has(item);};const handleCheckButtonClick=()=>{const selectedArray=buttonsByArray.find(array=>{return[...selectedItems].every(item=>array.includes(item));});if(selectedArray){console.log('All selected items belong to the same array:',selectedArray);const matchedIndex=buttonsByArray.findIndex(array=>array===selectedArray);setMatchedArrays(new Set([...matchedArrays,matchedIndex]));setLastMatchedArray(matchedIndex);// Store last matched array\nsetSelectedItems(new Set());setShouldShake(false);}else{console.log('Selected items do not belong to the same array');setShouldShake(true);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading-wrapper\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\u2665 Connections \\u2665\"})}),lastMatchedArray!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"subheading\",style:{color:arrayColors[lastMatchedArray]},children:arrayNames[lastMatchedArray]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid-container \".concat(shouldShake?'shake-animation':''),children:shuffledButtons.map((item,index)=>{const arrayIndex=buttonsByArray.findIndex(array=>array.includes(item));const isMatched=matchedArrays.has(arrayIndex);return/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(isItemSelected(item)?'selected':'',\" \").concat(isMatched?'matched':''),style:{backgroundColor:isMatched?arrayColors[arrayIndex]:null},onClick:()=>handleButtonClick(item),disabled:isMatched,children:item},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"check-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"check-button\",disabled:!checkButtonEnabled,onClick:handleCheckButtonClick,children:\"Check\"})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","buttonPositions","buttonsByArray","arrayColors","arrayNames","shuffleArray","array","shuffledArray","i","length","j","Math","floor","random","App","selectedItems","setSelectedItems","Set","checkButtonEnabled","setCheckButtonEnabled","matchedArrays","setMatchedArrays","shouldShake","setShouldShake","lastMatchedArray","setLastMatchedArray","shuffledButtons","setShuffledButtons","size","timer","setTimeout","clearTimeout","flat","handleButtonClick","item","has","updatedSelectedItems","delete","add","isItemSelected","handleCheckButtonClick","selectedArray","find","every","includes","console","log","matchedIndex","findIndex","children","className","style","color","concat","map","index","arrayIndex","isMatched","backgroundColor","onClick","disabled"],"sources":["/Users/neilmehta/Documents/vday-2024/anniversary-24/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\n\nconst buttonPositions = [\n  ['Cider', 'Seafood Casserole', 'Modern Art', 'Each Other'],\n  ['New Nanny', 'Family Business', 'Anonymous Blogger', 'New Money'],\n  ['Coat', 'Locket', 'Sweater', 'Book'],\n  ['Selfie', 'Aerial Shot', 'Shrimp', 'Shadow']\n];\n\nconst buttonsByArray = [\n  ['Shadow', 'Selfie', 'Shrimp', 'Aerial Shot'],\n  ['Modern Art', 'Seafood Casserole', 'Cider', 'Each Other'],\n  ['Anonymous Blogger', 'New Nanny', 'Family Business', 'New Money'],\n  ['Sweater', 'Book', 'Locket', 'Coat'],\n];\n\nconst arrayColors = ['maroon', 'green', 'navy', 'purple'];\nconst arrayNames = ['Lock screens of each other', 'Things we enjoyed on dates', 'Synopsis of shows we watched', 'Gifts to each other'];\n\nconst shuffleArray = (array) => {\n  const shuffledArray = [...array];\n  for (let i = shuffledArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n  }\n  return shuffledArray;\n};\n\nconst App = () => {\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [checkButtonEnabled, setCheckButtonEnabled] = useState(false);\n  const [matchedArrays, setMatchedArrays] = useState(new Set());\n  const [shouldShake, setShouldShake] = useState(false);\n  const [lastMatchedArray, setLastMatchedArray] = useState(null);\n  const [shuffledButtons, setShuffledButtons] = useState([]);\n\n  useEffect(() => {\n    setCheckButtonEnabled(selectedItems.size === 4);\n  }, [selectedItems]);\n\n  useEffect(() => {\n    if (shouldShake) {\n      const timer = setTimeout(() => setShouldShake(false), 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shouldShake]);\n\n  useEffect(() => {\n    setShuffledButtons(shuffleArray(buttonsByArray.flat()));\n  }, [buttonsByArray]);\n\n  const handleButtonClick = (item) => {\n    if (selectedItems.has(item)) {\n      const updatedSelectedItems = new Set(selectedItems);\n      updatedSelectedItems.delete(item);\n      setSelectedItems(updatedSelectedItems);\n    } else if (selectedItems.size < 4) {\n      setSelectedItems(new Set(selectedItems).add(item));\n    }\n  };\n\n  const isItemSelected = (item) => {\n    return selectedItems.has(item);\n  };\n\n  const handleCheckButtonClick = () => {\n    const selectedArray = buttonsByArray.find(array => {\n      return [...selectedItems].every(item => array.includes(item));\n    });\n\n    if (selectedArray) {\n      console.log('All selected items belong to the same array:', selectedArray);\n      const matchedIndex = buttonsByArray.findIndex(array => array === selectedArray);\n      setMatchedArrays(new Set([...matchedArrays, matchedIndex]));\n      setLastMatchedArray(matchedIndex); // Store last matched array\n      setSelectedItems(new Set());\n      setShouldShake(false);\n    } else {\n      console.log('Selected items do not belong to the same array');\n      setShouldShake(true);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"heading-wrapper\"><h1>♥ Connections ♥</h1></div>\n      {lastMatchedArray !== null && (\n        <div className=\"subheading\" style={{ color: arrayColors[lastMatchedArray] }}>\n          {arrayNames[lastMatchedArray]}\n        </div>\n      )}\n      <div className={`grid-container ${shouldShake ? 'shake-animation' : ''}`}>\n        {shuffledButtons.map((item, index) => {\n          const arrayIndex = buttonsByArray.findIndex(array => array.includes(item));\n          const isMatched = matchedArrays.has(arrayIndex);\n          return (\n            <button\n              key={index}\n              className={`${isItemSelected(item) ? 'selected' : ''} ${isMatched ? 'matched' : ''}`}\n              style={{\n                backgroundColor: isMatched ? arrayColors[arrayIndex] : null,\n              }}\n              onClick={() => handleButtonClick(item)}\n              disabled={isMatched}\n            >\n              {item}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"check-button-container\">\n        <button\n          className=\"check-button\"\n          disabled={!checkButtonEnabled}\n          onClick={handleCheckButtonClick}\n        >\n          Check\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}